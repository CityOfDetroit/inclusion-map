{"id":"node_modules/error/typed.js","dependencies":[{"name":"/Users/errabelly/Github/inclusion-map/package.json","includedInParent":true,"mtime":1578584150167},{"name":"/Users/errabelly/Github/inclusion-map/node_modules/error/package.json","includedInParent":true,"mtime":1578584150145},{"name":"string-template","loc":{"line":3,"column":23},"parent":"/Users/errabelly/Github/inclusion-map/node_modules/error/typed.js","resolved":"/Users/errabelly/Github/inclusion-map/node_modules/error/node_modules/string-template/index.js"},{"name":"assert","loc":{"line":4,"column":21},"parent":"/Users/errabelly/Github/inclusion-map/node_modules/error/typed.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/assert/assert.js"}],"generated":{"js":"'use strict';\n\nvar template = require('string-template');\nvar assert = require('assert');\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar isWordBoundary = /[_.-](\\w|$)/g;\n\nvar FUNCTION_FIELD_WHITELIST = Object.getOwnPropertyNames(TypedError)\n\nmodule.exports = TypedError;\n\nfunction TypedError(args) {\n    assert(args, 'TypedError: must specify options');\n    assert(args.type, 'TypedError: must specify options.type');\n    assert(args.message, 'TypedError: must specify options.message');\n\n    assert(!has(args, 'fullType'),\n        'TypedError: fullType field is reserved');\n\n    var message = args.message;\n    var funcName = args.name\n    if (!funcName) {\n        var errorName = camelCase(args.type) + 'Error';\n        funcName = errorName[0].toUpperCase() + errorName.substr(1);\n    }\n\n    var copyArgs = {}\n    extend(copyArgs, args)\n    for (var i = 0; i < FUNCTION_FIELD_WHITELIST.length; i++) {\n        delete copyArgs[FUNCTION_FIELD_WHITELIST[i]]\n    }\n\n    extend(createError, copyArgs);\n    createError._name = funcName;\n\n    return createError;\n\n    function createError(opts) {\n        var result = new Error();\n\n        Object.defineProperty(result, 'type', {\n            value: result.type,\n            enumerable: true,\n            writable: true,\n            configurable: true\n        });\n\n        var options = {}\n        extend(options, args)\n        extend(options, opts)\n        if (!options.fullType) {\n            options.fullType = options.type;\n        }\n\n        result.name = funcName\n        extend(result, options);\n        if (opts && opts.message) {\n            result.message = template(opts.message, options);\n        } else if (message) {\n            result.message = template(message, options);\n        }\n\n        return result;\n    }\n}\n\nfunction extend(target, source) {\n    for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n            target[key] = source[key]\n        }\n    }\n}\n\nfunction camelCase(str) {\n    return str.replace(isWordBoundary, upperCase);\n}\n\nfunction upperCase(_, x) {\n    return x.toUpperCase();\n}\n\nfunction has(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/error/typed.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/error/typed.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}}],"sources":{"node_modules/error/typed.js":"'use strict';\n\nvar template = require('string-template');\nvar assert = require('assert');\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar isWordBoundary = /[_.-](\\w|$)/g;\n\nvar FUNCTION_FIELD_WHITELIST = Object.getOwnPropertyNames(TypedError)\n\nmodule.exports = TypedError;\n\nfunction TypedError(args) {\n    assert(args, 'TypedError: must specify options');\n    assert(args.type, 'TypedError: must specify options.type');\n    assert(args.message, 'TypedError: must specify options.message');\n\n    assert(!has(args, 'fullType'),\n        'TypedError: fullType field is reserved');\n\n    var message = args.message;\n    var funcName = args.name\n    if (!funcName) {\n        var errorName = camelCase(args.type) + 'Error';\n        funcName = errorName[0].toUpperCase() + errorName.substr(1);\n    }\n\n    var copyArgs = {}\n    extend(copyArgs, args)\n    for (var i = 0; i < FUNCTION_FIELD_WHITELIST.length; i++) {\n        delete copyArgs[FUNCTION_FIELD_WHITELIST[i]]\n    }\n\n    extend(createError, copyArgs);\n    createError._name = funcName;\n\n    return createError;\n\n    function createError(opts) {\n        var result = new Error();\n\n        Object.defineProperty(result, 'type', {\n            value: result.type,\n            enumerable: true,\n            writable: true,\n            configurable: true\n        });\n\n        var options = {}\n        extend(options, args)\n        extend(options, opts)\n        if (!options.fullType) {\n            options.fullType = options.type;\n        }\n\n        result.name = funcName\n        extend(result, options);\n        if (opts && opts.message) {\n            result.message = template(opts.message, options);\n        } else if (message) {\n            result.message = template(message, options);\n        }\n\n        return result;\n    }\n}\n\nfunction extend(target, source) {\n    for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n            target[key] = source[key]\n        }\n    }\n}\n\nfunction camelCase(str) {\n    return str.replace(isWordBoundary, upperCase);\n}\n\nfunction upperCase(_, x) {\n    return x.toUpperCase();\n}\n\nfunction has(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n"},"lineCount":87}},"error":null,"hash":"907e59db35a007e13fd44befcad2ae80","cacheData":{"env":{}}}